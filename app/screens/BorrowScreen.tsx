import React from "react";
import { View, Text, TouchableOpacity, ScrollView } from "react-native";
import styles from "../styles/BorrowScreen.styles";

const BorrowScreen = () => {
  // üìå Mock d·ªØ li·ªáu v√≠ d·ª•, b·∫°n thay b·∫±ng API/context
  const borrowedBooks = [
    {
      id: "1",
      title: "JavaScript c∆° b·∫£n",
      author: "Nguy·ªÖn VƒÉn A",
      borrowDate: "2024-01-15",
      dueDate: "2024-01-29",
      daysLeft: 2,
      status: "due-soon",
    },
    {
      id: "2",
      title: "React Native Guide",
      author: "Nguy·ªÖn VƒÉn B",
      borrowDate: "2024-01-20",
      dueDate: "2024-02-03",
      daysLeft: 7,
      status: "active",
    },
    {
      id: "3",
      title: "Mobile Development",
      author: "John Smith",
      borrowDate: "2024-01-18",
      dueDate: "2024-02-01",
      daysLeft: 10,
      status: "active",
    },
  ];

  const handleRenew = (title: string) => {
    console.log("Gia h·∫°n:", title);
  };

  const handleReturn = (title: string) => {
    console.log("Tr·∫£ s√°ch:", title);
  };

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      {/* T·ªïng quan */}
      <View style={styles.overviewCard}>
        <Text style={styles.overviewTitle}>üìä T·ªïng quan</Text>
        <Text style={styles.overviewText}>
          ƒêang m∆∞·ª£n: 3 cu·ªën | S·∫Øp h·∫øt h·∫°n: 1 cu·ªën
        </Text>
      </View>

      {/* S·∫Øp h·∫øt h·∫°n */}
      <View>
        <Text style={styles.sectionTitle}>‚ö†Ô∏è S·∫Øp h·∫øt h·∫°n</Text>
        {borrowedBooks
          .filter((b) => b.status === "due-soon")
          .map((book) => (
            <View key={book.id} style={[styles.bookCard, styles.dueSoonCard]}>
              <View style={styles.bookHeader}>
                <Text style={styles.bookTitle}>{book.title}</Text>
                <Text style={styles.badgeDanger}>{book.daysLeft} ng√†y</Text>
              </View>
              <Text style={styles.bookMeta}>
                Ng√†y m∆∞·ª£n: {book.borrowDate} | H·∫°n tr·∫£: {book.dueDate}
              </Text>
              <View style={styles.actionRow}>
                <TouchableOpacity
                  style={[styles.actionBtn, styles.renewBtn]}
                  onPress={() => handleRenew(book.title)}
                >
                  <Text style={styles.actionText}>Gia h·∫°n</Text>
                </TouchableOpacity>
                <TouchableOpacity
                  style={[styles.actionBtn, styles.returnBtn]}
                  onPress={() => handleReturn(book.title)}
                >
                  <Text style={styles.actionText}>Tr·∫£ s√°ch</Text>
                </TouchableOpacity>
              </View>
            </View>
          ))}
      </View>

      {/* ƒêang m∆∞·ª£n */}
      <View>
        <Text style={styles.sectionTitle}>üìö ƒêang m∆∞·ª£n</Text>
        {borrowedBooks
          .filter((b) => b.status === "active")
          .map((book) => (
            <View key={book.id} style={styles.bookCard}>
              <View style={styles.bookHeader}>
                <Text style={styles.bookTitle}>{book.title}</Text>
                <Text style={styles.badgeSuccess}>{book.daysLeft} ng√†y</Text>
              </View>
              <Text style={styles.bookMeta}>
                Ng√†y m∆∞·ª£n: {book.borrowDate} | H·∫°n tr·∫£: {book.dueDate}
              </Text>
              <View style={styles.actionRow}>
                <TouchableOpacity
                  style={[styles.actionBtn, styles.renewBtn]}
                  onPress={() => handleRenew(book.title)}
                >
                  <Text style={styles.actionText}>Gia h·∫°n</Text>
                </TouchableOpacity>
                <TouchableOpacity
                  style={[styles.actionBtn, styles.returnBtn]}
                  onPress={() => handleReturn(book.title)}
                >
                  <Text style={styles.actionText}>Tr·∫£ s√°ch</Text>
                </TouchableOpacity>
              </View>
            </View>
          ))}
      </View>
    </ScrollView>
  );
};

export default BorrowScreen;
