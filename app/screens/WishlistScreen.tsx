import React, { useState } from "react";
import { View, Text, FlatList, TouchableOpacity, Alert } from "react-native";
import { useTheme } from "../contexts/ThemeContext";
import styles from "../styles/WishlistScreen.styles";
import GradientBox from "../components/GradientBox";
import * as Animatable from "react-native-animatable";

const WishlistScreen = ({ navigation }: any) => {
  const { theme } = useTheme();
  const [wishlistBooks, setWishlistBooks] = useState([
    {
      id: "1",
      title: "Advanced React Patterns",
      author: "Kent C. Dodds",
      availability: "available",
      gradient: ["#6366f1", "#4338ca"],
      emoji: "üîÆ",
    },
    {
      id: "2",
      title: "Clean Code",
      author: "Robert C. Martin",
      availability: "unavailable",
      gradient: ["#14b8a6", "#0f766e"],
      emoji: "üåä",
    },
    {
      id: "3",
      title: "System Design Interview",
      author: "Alex Xu",
      availability: "limited",
      gradient: ["#f59e0b", "#d97706"],
      emoji: "‚ö°",
    },
  ]);

  const handleRemoveFromWishlist = (id: string, title: string) => {
    Alert.alert(
      "X√°c nh·∫≠n x√≥a",
      `B·∫°n c√≥ mu·ªën x√≥a "${title}" kh·ªèi danh s√°ch y√™u th√≠ch kh√¥ng?`,
      [
        { text: "H·ªßy", style: "cancel" },
        {
          text: "X√≥a",
          style: "destructive",
          onPress: () => {
            setWishlistBooks(wishlistBooks.filter((b) => b.id !== id));
          },
        },
      ]
    );
  };

  const renderBook = ({ item, index }: any) => {
    const isAvailable = item.availability === "available";
    const isUnavailable = item.availability === "unavailable";
    const isLimited = item.availability === "limited";

    return (
      <Animatable.View
        animation="fadeInUp"
        duration={600}
        delay={index * 120}
        useNativeDriver
      >
        <View style={styles.bookCard}>
          {/* B√¨a s√°ch */}
          <GradientBox colors={item.gradient} style={styles.bookCover}>
            <Text style={styles.bookEmoji}>{item.emoji}</Text>
          </GradientBox>

          {/* Th√¥ng tin */}
          <View style={styles.bookInfo}>
            <Text style={styles.bookTitle}>{item.title}</Text>
            <Text style={styles.bookAuthor}>T√°c gi·∫£: {item.author}</Text>

            {isAvailable && <Text style={styles.availableText}>‚úÖ C√≥ s·∫µn</Text>}
            {isUnavailable && (
              <Text style={styles.unavailableText}>‚ùå ƒê√£ h·∫øt</Text>
            )}
            {isLimited && <Text style={styles.limitedText}>‚è≥ C√≤n 1 cu·ªën</Text>}

            {/* Buttons */}
            <View style={styles.actionRow}>
              {isAvailable && (
                <TouchableOpacity
                  activeOpacity={0.8}
                  style={[styles.button, styles.borrowBtn]}
                  onPress={() => navigation.navigate("Borrow")}
                >
                  <Text style={styles.borrowBtnText}>M∆∞·ª£n ngay</Text>
                </TouchableOpacity>
              )}
              {isUnavailable && (
                <TouchableOpacity
                  style={[styles.button, styles.disabledBtn]}
                  disabled
                >
                  <Text style={styles.disabledBtnText}>H·∫øt s√°ch</Text>
                </TouchableOpacity>
              )}
              {isLimited && (
                <TouchableOpacity
                  activeOpacity={0.8}
                  style={[styles.button, styles.borrowBtn]}
                  onPress={() => navigation.navigate("Borrow")}
                >
                  <Text style={styles.borrowBtnText}>M∆∞·ª£n ngay</Text>
                </TouchableOpacity>
              )}

              <TouchableOpacity
                activeOpacity={0.8}
                style={[styles.button, styles.removeBtn]}
                onPress={() => handleRemoveFromWishlist(item.id, item.title)}
              >
                <Text style={styles.removeBtnText}>üóëÔ∏è</Text>
              </TouchableOpacity>
            </View>
          </View>
        </View>
      </Animatable.View>
    );
  };

  return (
    <View
      style={[styles.container, { backgroundColor: theme.colors.background }]}
    >
      <View style={styles.header}>
        <Text style={styles.title}>‚ù§Ô∏è Danh s√°ch y√™u th√≠ch</Text>
        <Text style={styles.countText}>{wishlistBooks.length} cu·ªën</Text>
      </View>

      <FlatList
        data={wishlistBooks}
        keyExtractor={(item) => item.id}
        renderItem={renderBook}
        showsVerticalScrollIndicator={false}
        ListEmptyComponent={
          <Animatable.View
            animation="fadeIn"
            duration={500}
            style={styles.emptyBox}
          >
            <Text style={styles.emptyText}>Danh s√°ch tr·ªëng</Text>
            <TouchableOpacity
              activeOpacity={0.8}
              style={[styles.button, styles.borrowBtn]}
              onPress={() => navigation.navigate("Search")}
            >
              <Text style={styles.borrowBtnText}>T√¨m s√°ch</Text>
            </TouchableOpacity>
          </Animatable.View>
        }
      />
    </View>
  );
};

export default WishlistScreen;
